#include "robot-config.h"    
#include "G:\Turning Point\Testers.vex"

boolean countLift = false;

//Creates a method: when called, the boolean attached to countLift will switch to its opposite.
void liftConstant(){
    countLift = !countLift;
}

//Initializes and declares a temporary double for flywheelSpeed. This value will change later on.
double flywheelSpeed = 0.0;
void flySpeedInc(){
    flywheelSpeed += 10.0;
}

//Creates a method: when called, the flywheelSpeed will decrease by 10.
void flySpeedDec(){
    flywheelSpeed -= 10.0;
}

//The main method! Wow! It returns an int value. This will be the first thing that runs.
int main() {

//If the Y button is pressed, the liftConstant method will run. If the A button is pressed, the flySpeedInc method will run, etc.
    MainUser.ButtonY.pressed(liftConstant);
    MainUser.ButtonA.pressed(flySpeedInc);
    MainUser.ButtonB.pressed(flySpeedDec);
    
    //This while loop will loop forever.
    while(true){
        
        //Chassis Control
        //The integer unit of the left speed will equal the summation of the percents of Axis 3's, Axis 2's and Axis 1's position.
        int leftSpeedMainUser = int(MainUser.Axis3.position(vex::percentUnits::pct)) + ((MainUser.Axis1.position(vex::percentUnits::pct)) + (MainUser.Axis2.position(vex::percentUnits::pct)));
        //The integer unit of the right speed will equal the percent of Axis 3's position minus Axis 1's position plus Axis 2's position.
        int rightSpeedMainUser = int(MainUser.Axis3.position(vex::percentUnits::pct)) - ((MainUser.Axis1.position(vex::percentUnits::pct)) + (MainUser.Axis2.position(vex::percentUnits::pct)));
        
        //If the left speed is greater than 10 less than -10, the left chassis will spin forward by that speed.
        if(leftSpeedMainUser > 10 or leftSpeedMainUser < -10){
            LeftChassis.spin(vex::directionType::fwd,leftSpeedMainUser,vex::velocityUnits::pct);
        }
        
        //If the above doesn't apply, then the left chassis will not spin.
        else{
            LeftChassis.spin(vex::directionType::fwd,0,vex::velocityUnits::pct);
        }
        
        //If the right speed is greater than 10 less than -10, the right chassis will spin forward by that speed.
        if(rightSpeedMainUser > 10 or rightSpeedMainUser < -10){
            RightChassis.spin(vex::directionType::fwd,rightSpeedMainUser,vex::velocityUnits::pct);
        }
        
        //If the above doesn't apply, then the right chassis will not spin.
        else{
            RightChassis.spin(vex::directionType::fwd,0,vex::velocityUnits::pct);
        }
        
        
        
        //Lift Control
        //If countLift is true, the left lift and right lift will spin in the reverse direction by 100 RPM.
        if(countLift){
            LeftLift.spin(vex::directionType::rev,100,vex::velocityUnits::rpm);
            RightLift.spin(vex::directionType::rev,100,vex::velocityUnits::rpm);
        }
        
        //If the above doesn't apply and the L1 button is being pressed, the left lift and right lift will spin in the forward direction by 180 RPM
        else if(MainUser.ButtonL1.pressing()){
            LeftLift.spin(vex::directionType::fwd,180,vex::velocityUnits::rpm);
            RightLift.spin(vex::directionType::fwd,180,vex::velocityUnits::rpm);
        }
        
        //If the above doesn't apply and the L2 button is being pressed, the left lift and right lift will spin in the reverse direction by 140 RPM.
        else if(MainUser.ButtonL2.pressing()){
            LeftLift.spin(vex::directionType::rev,140,vex::velocityUnits::rpm);
            RightLift.spin(vex::directionType::rev,140,vex::velocityUnits::rpm);
        }
        
        //If the above doesn't apply, brake the right and left lifts.
        else{
            LeftLift.stop(vex::brakeType::hold);
            RightLift.stop(vex::brakeType::hold);
        }
        
        
        
        //Conveyor Belt Control
        //If the X button is being pressed, the conveyor belt will spin in the forward direction by 200 RPM.
        if(MainUser.ButtonX.pressing()){
            ConveyorBelt.spin(vex::directionType::fwd,200,vex::velocityUnits::rpm);
        }
        
        //If the above doesn't apply and the Y button is being pressed, the conveyor belt will spin in the reverse direction by 200 RPM.
        else if(MainUser.ButtonY.pressing()){
            ConveyorBelt.spin(vex::directionType::rev,200,vex::velocityUnits::rpm);
        }
        
        //If the above doesn't apply, brake the conveyor belt.
        else{
            ConveyorBelt.stop(vex::brakeType::hold);
        } 
        
        
        
        //Main User Claw Control 
        //If the R1 button is being pressed, the claw will spin in the forward direction by 140 RPM.
        if(MainUser.ButtonR1.pressing()){
            Claw.spin(vex::directionType::fwd,140,vex::velocityUnits::rpm);
        }
        
        //If the above doesn't apply and the R2 button is being pressed, the claw will spin in the reverse direction by 140 RPM.
        else if(MainUser.ButtonR2.pressing()){
            Claw.spin(vex::directionType::rev,140,vex::velocityUnits::rpm);
        }
        
        //If the above doesn't apply, brake the claw.
        else{
            Claw.stop(vex::brakeType::hold);
        }
        
        
        
        //FLYWHEEL TESTER
        //If, on the second user (not MainUser), the R1 button is being pressed, the top and bottom flywheels will spin in the RPM of the flywheelSpeed.
        if(SecondUser.ButtonR1.pressing()){
            FlywheelTop.spin(vex::directionType::fwd,flywheelSpeed, vex::velocityUnits::rpm);
            FlywheelBot.spin(vex::directionType::fwd,flywheelSpeed, vex::velocityUnits::rpm);
        }
        
        //If the above doesn't apply, brake the bottom and top flywheels. 
        else{
            FlywheelBot.stop(vex::brakeType::coast);
            FlywheelTop.stop(vex::brakeType::coast);
        }
    }
}
